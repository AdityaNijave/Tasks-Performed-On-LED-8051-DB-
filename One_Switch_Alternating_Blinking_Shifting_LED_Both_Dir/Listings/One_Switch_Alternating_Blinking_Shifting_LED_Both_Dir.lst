C51 COMPILER V9.59.0.0   ONE_SWITCH_ALTERNATING_BLINKING_SHIFTING_                         11/15/2023 11:15:38 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE ONE_SWITCH_ALTERNATING_BLINKING_SHIFTING_
OBJECT MODULE PLACED IN .\Objects\One_Switch_Alternating_Blinking_Shifting_LED_Both_Dir.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE One_Switch_Alternating_Blinking_Shifting_LED_Both_Dir.c OPTIMIZE(8,SPEED
                    -) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\One_Switch_Alternating_Blinking_Shifting_LED_Both_Dir.lst) TABS(2) OBJECT(.
                    -\Objects\One_Switch_Alternating_Blinking_Shifting_LED_Both_Dir.obj)

line level    source

   1          #include <REGX51.H>                                               //including required lib's
   2          
   3          //sbit declerations
   4          sbit sw = P1^0;                                                   //Switch is at port 1 pin 0
   5          
   6          //forword declerations of user defined functions
   7          void alternating_LED();                                           //function for alternate leds blink
   8          void blinking_LED();                                              //function for blinking leds
   9          void shifting_left_to_right();                                    //function for turn on leds from left to right
  10          void shifting_right_to_left();                                    //function for turn on leds from right to left
  11          void delay(unsigned int);                                         //delay function with one parameter
  12          
  13          void main()                                                       //main function
  14          {
  15   1        unsigned int flag;                                              //decleration of variables
  16   1        
  17   1        //initializations
  18   1        sw = 1;
  19   1        P3 = 0x00;
  20   1        
  21   1        while(1)                                                        //forever loop (or we can use for(;;))
  22   1        {
  23   2          if(sw == 0 && flag == 0)                                      //if switch is active low and value of flag is equal to 0 the
             -n,
  24   2          {
  25   3            delay(100);                                                 //calling delay function with 100
  26   3            alternating_LED();                                          //calling alternating_LED()
  27   3            flag=1;                                                     //assign value 1 to variable flag
  28   3            
  29   3          }
  30   2          
  31   2          else if(sw == 0 && flag == 1)                                 //else if switch is active low and value of flag is equal 
             -to 1 then,
  32   2          {
  33   3            delay(100);                                                 //calling delay function with 100
  34   3            blinking_LED();                                             //calling blinking_LED()
  35   3            flag = 2;                                                   //assign value 2 to variable flag
  36   3          }
  37   2          
  38   2          else if(sw == 0 && flag == 2)                                 //else if switch is active low and value of flag is equal 
             -to 2 then,
  39   2          {
  40   3            delay(100);                                                 //calling delay function with 100
  41   3            shifting_left_to_right();                                   //calling shifting_left_to_right()
  42   3            flag = 3;                                                   //assign value 3 to variable flag
  43   3          }
  44   2          
  45   2          else if(sw == 0 && flag == 3)                                 //else if switch is active low and value of flag is equal 
             -to 3 then,
  46   2          {
  47   3            delay(100);                                                 //calling delay function with 100
  48   3            shifting_right_to_left();                                   //calling shifting_right_to_left()
  49   3            flag = 4;                                                   //assign value 4 to variable flag
C51 COMPILER V9.59.0.0   ONE_SWITCH_ALTERNATING_BLINKING_SHIFTING_                         11/15/2023 11:15:38 PAGE 2   

  50   3          }
  51   2          
  52   2          else if(sw == 0 && flag == 4)                                 //else if switch is active low and value of flag is equal 
             -to 4 then,
  53   2          {
  54   3            delay(100);                                                 //calling delay function with 100
  55   3            P3 = 0x00;                                                  //all pins of port will be active low (i.e., off state)
  56   3            flag = 0;                                                   //assign value 0 to variable flag to create an loop
  57   3          }
  58   2          
  59   2        }
  60   1      }
  61          
  62          
  63          //functions definations of user defined functions
  64          void alternating_LED()
  65          {
  66   1        P3 = 0x55;                                                    //P3 = 01010101
  67   1        delay(250);                                                   //calling delay function with 250
  68   1            
  69   1        P3 = 0xAA;                                                    //P3 = 10101010
  70   1        delay(250);                                                   //calling delay function with 250
  71   1      }
  72          
  73          void shifting_right_to_left()
  74          {
  75   1        
  76   1        P3 = 0x01;                                                    //P3 = 00000001
  77   1        delay(25);                                                    //calling delay function with 25
  78   1          
  79   1        P3 = 0x02;                                                    //P3 = 00000010
  80   1        delay(25);                                                    //calling delay function with 25
  81   1          
  82   1        P3 = 0x04;                                                    //P3 = 00000100
  83   1        delay(25);                                                    //calling delay function with 25
  84   1          
  85   1        P3 = 0x08;                                                    //P3 = 00001000
  86   1        delay(25);                                                    //calling delay function with 25
  87   1          
  88   1        P3 = 0x10;                                                    //P3 = 00010000
  89   1        delay(25);                                                    //calling delay function with 25
  90   1          
  91   1        P3 = 0x20;                                                    //P3 = 00100000
  92   1        delay(25);                                                    //calling delay function with 25
  93   1          
  94   1        P3 = 0x40;                                                    //P3 = 01000000
  95   1        delay(25);                                                    //calling delay function with 25
  96   1          
  97   1        P3 = 0x80;                                                    //P3 = 10000000
  98   1        delay(25);                                                    //calling delay function with 25
  99   1      }
 100            
 101          void shifting_left_to_right()
 102          {
 103   1          
 104   1        P3 = 0x80;                                                    //P3 = 10000000
 105   1        delay(25);                                                    //calling delay function with 25
 106   1        
 107   1        P3 = 0x40;                                                    //P3 = 01000000
 108   1        delay(25);                                                    //calling delay function with 25
 109   1        
 110   1        P3 = 0x20;                                                    //P3 = 00100000
C51 COMPILER V9.59.0.0   ONE_SWITCH_ALTERNATING_BLINKING_SHIFTING_                         11/15/2023 11:15:38 PAGE 3   

 111   1        delay(25);                                                    //calling delay function with 25
 112   1        
 113   1        P3 = 0x10;                                                    //P3 = 00010000
 114   1        delay(25);                                                    //calling delay function with 25
 115   1        
 116   1        P3 = 0x08;                                                    //P3 = 00001000
 117   1        delay(25);                                                    //calling delay function with 25
 118   1        
 119   1        P3 = 0x04;;                                                   //P3 = 00000100
 120   1        delay(25);                                                    //calling delay function with 25
 121   1        
 122   1        P3 = 0x02;;                                                   //P3 = 00000010
 123   1        delay(25);                                                    //calling delay function with 25
 124   1        
 125   1        P3 = 0x01;;                                                   //P3 = 00000001
 126   1        delay(25);                                                    //calling delay function with 25
 127   1      }
 128          
 129          void blinking_LED()
 130          {
 131   1        P3 = 0x00;;                                                   //P3 = 00000000 (all pins are low)
 132   1        delay(25);                                                    //calling delay function with 25
 133   1        
 134   1        P3 = 0xFF;;                                                   //P3 = 11111111 (all pins are high)
 135   1        delay(25);                                                    //calling delay function with 25
 136   1      }
 137          
 138          
 139          
 140          void delay(unsigned int time)
 141          {
 142   1        unsigned int i,j;                                             //decleration of variables
 143   1        for(i = 0; i < time; i++)                                     //for loop
 144   1        {
 145   2          for(j = 0; j < 1000; j++);                                  //nested for loop
 146   2        }
 147   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    318    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       2
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
